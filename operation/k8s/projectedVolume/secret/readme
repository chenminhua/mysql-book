kubectl create secret generic user --from-file=./username.txt
kubectl create secret generic pass --from-file=./password.txt



接下来，我们尝试一下创建这个 Pod：

    $ kubectl create -f test-projected-volume.yaml

当 Pod 变成 Running 状态之后，我们再验证一下这些 Secret 对象是不是已经在容器里了：

    $ kubectl exec -it test-projected-volume -- /bin/sh
    $ ls /projected-volume/

从返回结果中，我们可以看到，保存在 Etcd 里的用户名和密码信息，已经以文件的形式出现在了容器的 Volume 目录里。更重要是，像这样通过挂载方式进入到容器里的 Secret，一旦其对应的 Etcd 里的数据被更新，这些 Volume 里的文件内容，同样也会被更新。其实，**这是 kubelet 组件在定时维护这些 Volume。**
